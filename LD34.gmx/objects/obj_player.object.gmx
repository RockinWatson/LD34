<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_player_idle</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
global.health = 0;
global.invincible = 0;

grav = 10;
hsp = 0;
vsp = 0;
move = 0;
movespeed = 1.1;
move_friction = .7;
facing = 1;

gamepad_set_axis_deadzone(0,0.2);

var torch = 1;

//Torch
x_offset = 40;
y_offset = -20;
my_torch = instance_create(obj_player.x + x_offset, obj_player.y + y_offset, obj_torch)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Get the player's input
global.key_right = keyboard_check(ord("D")) || (gamepad_axis_value(0, gp_axislh)&gt;0);
global.key_left = keyboard_check(ord("A")) || (gamepad_axis_value(0, gp_axislh)&lt;0);

//React to inputs
move = global.key_right + -global.key_left
hsp += move * movespeed;

//Friction Right
if (hsp &gt; 2) and (!global.key_right){
    hsp -= move_friction;
    if (hsp &lt;= 2){
        hsp = 0;   
    }
}
//Friction Left
if (hsp &lt; -2) and (!global.key_left){
    hsp += move_friction;
    if (hsp &gt;= -2){
        hsp = 0;   
    }
}

//Horizontal Collision
if (place_meeting(x+hsp,y,obj_ground)){
    while(!place_meeting(x+sign(hsp),y,obj_ground)){
        x += sign(hsp);
        obj_arm.x += sign(hsp)
    }
    hsp = 0;
}
x += hsp;
 
//Vertical Collision
if (vsp &lt; 20){ 
    vsp += 1;
} 
if (place_meeting(x,y+vsp,obj_ground)){
    while(!place_meeting(x,y+sign(vsp),obj_ground)){
        y += sign(vsp);
        obj_arm.y += sign(vsp)
    }
    vsp = obj_ground.vspeed;
}
y += vsp;

//Torch Light
if global.health &lt;=0{
    global.health = 0;
}

if global.health &gt;=10{
    global.health = 10
}

//Arm following you
/*if instance_exists(obj_arm) &amp;&amp; (obj_player.image_index == 0) //(facing == 1)
{
    arm.x = obj_player.x + arm_x_offset;
    arm.y = obj_player.y + arm_y_offset;
}else if instance_exists(obj_arm) &amp;&amp; (obj_player.image_index ==1) //(facing == -1)
{
    arm.x = obj_player.x - arm_x_offset;
    arm.y = obj_player.y + arm_y_offset;
}*/
//Torch following you
if instance_exists(obj_torch) &amp;&amp; (facing == 1){
    my_torch.x = x + x_offset - 6;
    my_torch.y = y + y_offset;
}else if instance_exists (obj_torch) &amp;&amp; (facing == -1){
    my_torch.x = x - x_offset + 15;
    my_torch.y = y + y_offset;
}

//Speed Limits//
if (hsp&gt;13.5) or (hsp &lt; -13.5){
    hsp = move*13.5
}
if (vspeed &gt;30){
    vspeed = 30;
}

//Take player out of ground 
if position_meeting (sprite_width, sprite_height-1,obj_ground){
    instance_position(x-sprite_xoffset+sprite_width/2,y-sprite_yoffset+sprite_height,obj_ground)
    move_outside_solid(90,sprite_height);
}

//Image Flip
if (move){
    facing = move; 
    obj_arm.image_yscale = move;
}else if -move {
    facing = -1
    obj_arm.image_yscale = -1;
}
//Running Animation
if place_meeting(x, y+1, obj_ground) {
    if move!= 0 {sprite_index = sprite_player_moving}else{sprite_index = sprite_player_idle}
}else{
 if vsp &gt; 0 {sprite_index = sprite_player_falling}
}

/*
if move {
    facing = 1
    obj_arm.image_yscale = 1;
    sprite_index = sprite_player_moving
}else if -move {
    facing = -1
    obj_arm.image_yscale = -1;
    sprite_index = sprite_player_moving
}else{
    sprite_index = sprite_player_idle
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ground">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y -= 2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="82">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, x, y, facing, 1,0, c_white, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.health -=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.health +=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
