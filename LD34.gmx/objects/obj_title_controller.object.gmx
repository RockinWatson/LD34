<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-600</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tree_throw = 1;
ghost_fly = 1;
bat_fly = 1;

if room == room_story_1{
    alarm [1] = 210;
}

if room == room_story_2{
    alarm [1] = 210
}
if room == room_story_3{
    alarm [1] = 200
}
if room == room_story_4{
    alarm [1] = 330;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bat_fly = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ghost_fly = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0,0, obj_fade_controller);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tree_throw = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room == room_story_1) and (tree_throw == 1){
    tree_throw = 0;
    with (instance_create(x-100, random_range(0, 1000), obj_tree_1)){
        hspeed = random_range (25, 28);
        vspeed = random_range (-5, 15);
   }
    with (instance_create(room_width +100, random_range(0, 1000), obj_tree_1)){
        hspeed = random_range(-25, -28);
        vspeed = random_range (-5, 20);
    }
   alarm [0] = random_range(20, 60);
}

if (room == room_story_2) and (ghost_fly == 1){
    ghost_fly = 0;
    with (instance_create(room_width+300, random_range(400, 800), obj_ghost_stealing)){
        hspeed = random_range (-15, -20);
        vspeed = random_range (-5, 10);
    }
    with (instance_create(x - 300, random_range(0, 1000), obj_ghost_stealing)){
        hspeed = random_range (15, 20);
        vspeed = random_range (-5, 10);
    }
    alarm [2] = random_range(50, 70);
}
if (room == room_story_2) and (bat_fly == 1){
    bat_fly = 0;
    with (instance_create(room_width+300, random_range(400, 800), obj_bat_stealing)){
        hspeed = random_range (-8, -10);
        vspeed = random_range (-5, 10);
    }
    with (instance_create(x - 300, random_range(0, 1000), obj_bat_stealing)){
        hspeed = random_range (8, 10);
        vspeed = random_range (-5, 10);
    }
    alarm [3] = random_range(40, 80);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room == room_title{
//House
draw_sprite(sprite_house_1, sprite_index, 800, 450);

//Title
draw_sprite(sprite_title, sprite_index, 800, 600);

//D to Continue
draw_sprite(sprite_continue, sprite_index, 800, 835);
}

//Story
if room == room_story_1{
    draw_sprite(sprite_story_1, sprite_index, 800, 250);
    draw_sprite(sprite_skip, sprite_index, 800, 835);
}

if room == room_story_2{
    draw_sprite(sprite_story_1, sprite_index, 800, 250);
    draw_sprite(sprite_story_2, sprite_index, 800, 500);
    draw_sprite(sprite_skip, sprite_index, 800, 835);
}

if room == room_story_3{
    draw_sprite(sprite_house_2, sprite_index, 800, 350);
    draw_sprite(sprite_skip, sprite_index, 800, 835);
}

if room == room_story_4{
    draw_sprite(sprite_cave, sprite_index, 800, 450);
    draw_sprite(sprite_story_3, sprite_index, 800, 75);
    draw_sprite(sprite_skip, sprite_index, 800, 835);
}

if room == room_end{
    draw_sprite(sprite_title, sprite_index, 800, room_height/2-320);
    draw_sprite(sprite_thanks, sprite_index, 800, 550)
    draw_sprite(sprite_retry, sprite_index, 1480, 825)
    draw_sprite(sprite_exit, sprite_index, 120, 825)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
